{
  "name": "real-time-chat-app",
  "version": "1.0.0",
  "description": "Full-stack real-time chat application",
  "private": true,
  "workspaces": [
    "frontend",
    "backend"
  ],
  "scripts": {
    "dev": "concurrently \"npm run dev:backend\" \"npm run dev:frontend\"",
    "dev:backend": "cd backend && npm run dev",
    "dev:frontend": "cd frontend && npm run dev",
    "start": "concurrently \"npm run start:backend\" \"npm run start:frontend\"",
    "start:backend": "cd backend && npm start",
    "start:frontend": "cd frontend && npm run preview",
    "build": "npm run build:frontend && npm run build:backend",
    "build:frontend": "cd frontend && npm run build",
    "build:backend": "cd backend && npm run build",
    "test": "npm run test:backend && npm run test:frontend",
    "test:backend": "cd backend && npm test",
    "test:frontend": "cd frontend && npm test",
    "test:watch": "concurrently \"npm run test:watch:backend\" \"npm run test:watch:frontend\"",
    "test:watch:backend": "cd backend && npm run test:watch",
    "test:watch:frontend": "cd frontend && npm run test:watch",
    "install:all": "npm install && cd backend && npm install && cd ../frontend && npm install",
    "clean": "npm run clean:backend && npm run clean:frontend",
    "clean:backend": "cd backend && rm -rf node_modules && rm -f package-lock.json",
    "clean:frontend": "cd frontend && rm -rf node_modules dist && rm -f package-lock.json",
    "db:setup": "cd backend && npm run db:setup",
    "db:migrate": "cd backend && npm run db:migrate",
    "db:seed": "cd backend && npm run db:seed",
    "db:reset": "cd backend && npm run db:reset",
    "lint": "npm run lint:backend && npm run lint:frontend",
    "lint:backend": "cd backend && npm run lint",
    "lint:frontend": "cd frontend && npm run lint",
    "docker:build": "docker-compose build",
    "docker:up": "docker-compose up",
    "docker:down": "docker-compose down",
    "docker:dev": "docker-compose -f docker-compose.dev.yml up",
    "docker:prod": "docker-compose -f docker-compose.prod.yml up",
    "setup": "node -e \"process.platform === 'win32' ? require('child_process').exec('scripts\\\\setup.bat') : require('child_process').exec('bash scripts/setup.sh')\"",
    "deploy": "node -e \"const env = process.argv[2] || 'development'; process.platform === 'win32' ? require('child_process').exec(`scripts\\\\deploy.bat ${env}`) : require('child_process').exec(`bash scripts/deploy.sh ${env}`)\"",
    "deploy:dev": "npm run deploy development",
    "deploy:prod": "npm run deploy production",
    "deploy:docker": "npm run deploy docker",
    "test:system": "node tests/system-validation-runner.js",
    "validate": "npm run test:system"
  },
  "devDependencies": {
    "concurrently": "^9.1.0",
    "jest": "^30.1.3"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  },
  "keywords": [
    "chat",
    "real-time",
    "react",
    "nodejs",
    "socket.io",
    "postgresql"
  ],
  "author": "",
  "license": "ISC"
}
